{"version":3,"file":"extension.js","mappings":";;;;;;;;;AAAA,IAAMA,MAAM,GAAGC,mBAAO,CAAC,sBAAQ,CAAC;AAChC,IAAMC,IAAI,GAAGD,mBAAO,CAAC,kBAAM,CAAC;AAE5B,SAASE,QAAQA,CAACC,OAAO,EAAE;EACzB,IAAIC,YAAY,GAAGC,SAAS;EAE5B,IAAIC,UAAU,GAAGP,MAAM,CAACQ,QAAQ,CAACC,eAAe,CAAC,kBAAkB,EAAE,YAAM;IACzE,IAAIJ,YAAY,EAAE;MAChBA,YAAY,CAACK,MAAM,CAACV,MAAM,CAACW,UAAU,CAACC,GAAG,CAAC;MAC1C;IACF;IAEAP,YAAY,GAAGL,MAAM,CAACa,MAAM,CAACC,kBAAkB,CAC7C,YAAY,EACZ,YAAY,EACZd,MAAM,CAACW,UAAU,CAACC,GAAG,EACrB;MACEG,aAAa,EAAE,IAAI;MACnBC,uBAAuB,EAAE;IAC3B,CACF,CAAC;IAED,IAAMC,gBAAgB,GAAGjB,MAAM,CAACkB,GAAG,CAACC,IAAI,CACtCjB,IAAI,CAACkB,IAAI,CAAChB,OAAO,CAACiB,aAAa,EAAE,MAAM,EAAE,SAAS,CACpD,CAAC;IACD,IAAMC,SAAS,GAAGjB,YAAY,CAACkB,OAAO,CAACC,YAAY,CAACP,gBAAgB,CAAC;IAErEZ,YAAY,CAACkB,OAAO,CAACE,IAAI,s9DAAAC,MAAA,CAsDFJ,SAAS,mDAEpB;IAEZjB,YAAY,CAACsB,YAAY,CACvB,YAAM;MACJtB,YAAY,GAAGC,SAAS;IAC1B,CAAC,EACD,IAAI,EACJF,OAAO,CAACwB,aACV,CAAC;EACH,CAAC,CAAC;EAEFxB,OAAO,CAACwB,aAAa,CAACC,IAAI,CAACtB,UAAU,CAAC;AACxC;AAEA,SAASuB,UAAUA,CAAA,EAAG,CAAE;AAExBC,MAAM,CAACC,OAAO,GAAG;EACf7B,QAAQ,EAARA,QAAQ;EACR2B,UAAU,EAAVA;AACF,CAAC;;;;;;;;;;;ACtGD;;;;;;;;;;;ACAA;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;UEtBA;UACA;UACA;UACA","sources":["webpack://devcrawler/./src/extension.js","webpack://devcrawler/external commonjs \"vscode\"","webpack://devcrawler/external node-commonjs \"path\"","webpack://devcrawler/webpack/bootstrap","webpack://devcrawler/webpack/before-startup","webpack://devcrawler/webpack/startup","webpack://devcrawler/webpack/after-startup"],"sourcesContent":["const vscode = require('vscode');\nconst path = require('path');\n\nfunction activate(context) {\n  let currentPanel = undefined;\n\n  let disposable = vscode.commands.registerCommand('devcrawler.start', () => {\n    if (currentPanel) {\n      currentPanel.reveal(vscode.ViewColumn.One);\n      return;\n    }\n\n    currentPanel = vscode.window.createWebviewPanel(\n      'devcrawler',\n      'DevCrawler',\n      vscode.ViewColumn.One,\n      {\n        enableScripts: true,\n        retainContextWhenHidden: true\n      }\n    );\n\n    const scriptPathOnDisk = vscode.Uri.file(\n      path.join(context.extensionPath, 'dist', 'game.js')\n    );\n    const scriptUri = currentPanel.webview.asWebviewUri(scriptPathOnDisk);\n\n    currentPanel.webview.html = `<!DOCTYPE html>\n        <html lang=\"en\">\n        <head>\n            <meta charset=\"UTF-8\">\n            <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n            <title>DevCrawler</title>\n            <style>\n                body {\n                    margin: 0;\n                    padding: 0;\n                    width: 100vw;\n                    height: 100vh;\n                    overflow: hidden;\n                    background-color: #1e1e1e;\n                }\n                #gameContainer {\n                    position: relative;\n                    width: 100%;\n                    height: 100%;\n                    display: flex;\n                    justify-content: center;\n                    align-items: center;\n                }\n                #gameCanvas {\n                    background-color: #000;\n                }\n                #loadingScreen {\n                    position: absolute;\n                    top: 0;\n                    left: 0;\n                    width: 100%;\n                    height: 100%;\n                    background-color: #1e1e1e;\n                    display: flex;\n                    justify-content: center;\n                    align-items: center;\n                    color: #fff;\n                    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n                    font-size: 24px;\n                }\n                .hidden {\n                    display: none !important;\n                }\n            </style>\n        </head>\n        <body>\n            <div id=\"gameContainer\">\n                <canvas id=\"gameCanvas\" width=\"800\" height=\"600\"></canvas>\n                <div id=\"loadingScreen\">Loading DevCrawler...</div>\n            </div>\n            <script>\n                // Initialize before loading game script\n                console.log('Initializing game environment...');\n            </script>\n            <script src=\"${scriptUri}\"></script>\n        </body>\n        </html>`;\n\n    currentPanel.onDidDispose(\n      () => {\n        currentPanel = undefined;\n      },\n      null,\n      context.subscriptions\n    );\n  });\n\n  context.subscriptions.push(disposable);\n}\n\nfunction deactivate() { }\n\nmodule.exports = {\n  activate,\n  deactivate\n};\n","module.exports = require(\"vscode\");","module.exports = require(\"path\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(\"./src/extension.js\");\n",""],"names":["vscode","require","path","activate","context","currentPanel","undefined","disposable","commands","registerCommand","reveal","ViewColumn","One","window","createWebviewPanel","enableScripts","retainContextWhenHidden","scriptPathOnDisk","Uri","file","join","extensionPath","scriptUri","webview","asWebviewUri","html","concat","onDidDispose","subscriptions","push","deactivate","module","exports"],"sourceRoot":""}