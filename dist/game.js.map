{"version":3,"file":"game.js","mappings":"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","sources":["webpack://devcrawler/./src/game/grid/GridCell.js","webpack://devcrawler/./src/game/grid/GridManager.js","webpack://devcrawler/webpack/bootstrap","webpack://devcrawler/webpack/runtime/define property getters","webpack://devcrawler/webpack/runtime/hasOwnProperty shorthand","webpack://devcrawler/webpack/runtime/make namespace object","webpack://devcrawler/./src/game/index.js"],"sourcesContent":["// src/game/grid/GridCell.js\nexport class GridCell {\n  constructor(x, y) {\n    // Position\n    this.x = x;\n    this.y = y;\n\n    // Basic properties\n    this.type = 'floor';  // floor, wall, door, stairs-up, stairs-down\n    this.walkable = true;\n    this.transparent = true;  // For line of sight calculations\n\n    // Visibility properties\n    this.visible = false;  // Currently in field of view\n    this.explored = false; // Has been seen before\n\n    // Gameplay properties\n    this.entities = new Set();  // Entities in this cell (monsters, items, etc.)\n\n    // Special properties\n    this.properties = new Map();  // For doors: locked, requires_key, etc.\n  }\n\n  // Entity management\n  addEntity(entity) {\n    this.entities.add(entity);\n    return this;\n  }\n\n  removeEntity(entity) {\n    this.entities.delete(entity);\n    return this;\n  }\n\n  hasBlockingEntity() {\n    return Array.from(this.entities).some(entity => entity.blocking);\n  }\n\n  // Property management\n  setProperty(key, value) {\n    this.properties.set(key, value);\n    return this;\n  }\n\n  getProperty(key) {\n    return this.properties.get(key);\n  }\n\n  hasProperty(key) {\n    return this.properties.has(key);\n  }\n\n  // Cell type management\n  setType(type) {\n    this.type = type;\n    // Update walkable and transparent based on type\n    switch (type) {\n      case 'wall':\n        this.walkable = false;\n        this.transparent = false;\n        break;\n      case 'door':\n        this.walkable = this.getProperty('open') || false;\n        this.transparent = this.getProperty('open') || false;\n        break;\n      case 'floor':\n      case 'stairs-up':\n      case 'stairs-down':\n        this.walkable = true;\n        this.transparent = true;\n        break;\n      default:\n        console.warn(`Unknown cell type: ${type}`);\n    }\n    return this;\n  }\n}\n","// src/game/grid/GridManager.js\nimport { GridCell } from './GridCell.js';\n\nexport class GridManager {\n  constructor(width, height, tileSize = 32) {\n    this.width = width;\n    this.height = height;\n    this.tileSize = tileSize;\n    this.grid = this.createGrid();\n  }\n\n  createGrid() {\n    const grid = new Array(this.height);\n    for (let y = 0; y < this.height; y++) {\n      grid[y] = new Array(this.width);\n      for (let x = 0; x < this.width; x++) {\n        grid[y][x] = new GridCell(x, y);\n      }\n    }\n    return grid;\n  }\n\n  isInBounds(x, y) {\n    return x >= 0 && x < this.width && y >= 0 && y < this.height;\n  }\n\n  getCell(x, y) {\n    if (!this.isInBounds(x, y)) return null;\n    return this.grid[y][x];\n  }\n\n  // Movement validation\n  canMoveTo(x, y) {\n    const cell = this.getCell(x, y);\n    if (!cell) return false;\n    return cell.walkable && !cell.hasBlockingEntity();\n  }\n\n  // Coordinate conversion\n  gridToScreen(gridX, gridY) {\n    return {\n      x: gridX * this.tileSize,\n      y: gridY * this.tileSize\n    };\n  }\n\n  screenToGrid(screenX, screenY) {\n    return {\n      x: Math.floor(screenX / this.tileSize),\n      y: Math.floor(screenY / this.tileSize)\n    };\n  }\n\n  // Get all neighbors of a cell\n  getNeighbors(x, y, includeDiagonals = false) {\n    const neighbors = [];\n    const directions = [\n      { x: 0, y: -1 },  // Up\n      { x: 1, y: 0 },   // Right\n      { x: 0, y: 1 },   // Down\n      { x: -1, y: 0 }   // Left\n    ];\n\n    if (includeDiagonals) {\n      directions.push(\n        { x: 1, y: -1 },  // Up-Right\n        { x: 1, y: 1 },   // Down-Right\n        { x: -1, y: 1 },  // Down-Left\n        { x: -1, y: -1 }  // Up-Left\n      );\n    }\n\n    for (const dir of directions) {\n      const newX = x + dir.x;\n      const newY = y + dir.y;\n      const cell = this.getCell(newX, newY);\n      if (cell) neighbors.push(cell);\n    }\n\n    return neighbors;\n  }\n\n  // Get walkable neighbors (for pathfinding)\n  getWalkableNeighbors(x, y, includeDiagonals = false) {\n    return this.getNeighbors(x, y, includeDiagonals)\n      .filter(cell => this.canMoveTo(cell.x, cell.y));\n  }\n\n  // Line of sight check\n  hasLineOfSight(x1, y1, x2, y2) {\n    // Bresenham's line algorithm\n    const dx = Math.abs(x2 - x1);\n    const dy = Math.abs(y2 - y1);\n    const sx = x1 < x2 ? 1 : -1;\n    const sy = y1 < y2 ? 1 : -1;\n    let err = dx - dy;\n\n    let x = x1;\n    let y = y1;\n\n    while (true) {\n      if (x === x2 && y === y2) return true;\n\n      const cell = this.getCell(x, y);\n      if (!cell || !cell.transparent) return false;\n\n      const e2 = 2 * err;\n      if (e2 > -dy) {\n        err -= dy;\n        x += sx;\n      }\n      if (e2 < dx) {\n        err += dx;\n        y += sy;\n      }\n    }\n  }\n\n  // Get all cells within a certain range\n  getCellsInRange(centerX, centerY, range) {\n    const cells = [];\n    for (let y = centerY - range; y <= centerY + range; y++) {\n      for (let x = centerX - range; x <= centerX + range; x++) {\n        const cell = this.getCell(x, y);\n        if (cell) {\n          const distance = Math.sqrt(\n            Math.pow(x - centerX, 2) +\n            Math.pow(y - centerY, 2)\n          );\n          if (distance <= range) {\n            cells.push(cell);\n          }\n        }\n      }\n    }\n    return cells;\n  }\n\n  resetVisibility() {\n    for (let y = 0; y < this.height; y++) {\n      for (let x = 0; x < this.width; x++) {\n        this.grid[y][x].visible = false;\n      }\n    }\n  }\n\n  clear() {\n    this.grid = this.createGrid();\n  }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// src/game/index.js\nimport { GridManager } from './grid/GridManager.js';\n\nclass GameManager {\n  constructor() {\n    console.log('GameManager initializing...');\n\n    try {\n      // Initialize canvas\n      this.canvas = document.getElementById('gameCanvas');\n      if (!this.canvas) {\n        throw new Error('Canvas element not found');\n      }\n\n      this.ctx = this.canvas.getContext('2d');\n      if (!this.ctx) {\n        throw new Error('Could not get 2D context');\n      }\n\n      // Set canvas size to match grid\n      const GRID_WIDTH = 20;\n      const GRID_HEIGHT = 15;\n      const TILE_SIZE = 32;\n\n      this.canvas.width = GRID_WIDTH * TILE_SIZE;\n      this.canvas.height = GRID_HEIGHT * TILE_SIZE;\n\n      // Initial canvas setup\n      this.ctx.imageSmoothingEnabled = false;\n\n      // Create grid system\n      this.gridManager = new GridManager(GRID_WIDTH, GRID_HEIGHT, TILE_SIZE);\n\n      // Set up game state\n      this.lastFrameTime = 0;\n      this.frameCount = 0;\n\n      // Create test dungeon\n      this.createTestDungeon();\n\n      // Player position\n      this.playerPos = { x: 2, y: 2 };\n\n      // Bind event handlers\n      this.handleKeyDown = this.handleKeyDown.bind(this);\n      window.addEventListener('keydown', this.handleKeyDown);\n\n      // Start game loop\n      console.log('Starting game loop...');\n      this.gameLoop(0);\n\n      // Hide loading screen\n      const loadingScreen = document.getElementById('loadingScreen');\n      if (loadingScreen) {\n        loadingScreen.classList.add('hidden');\n      }\n    } catch (error) {\n      console.error('Game initialization error:', error);\n      throw error;\n    }\n  }\n\n  createTestDungeon() {\n    // Create some test walls\n    for (let x = 5; x < 10; x++) {\n      this.gridManager.getCell(x, 5).setType('wall');\n    }\n\n    for (let y = 5; y < 8; y++) {\n      this.gridManager.getCell(10, y).setType('wall');\n    }\n\n    // Add a test door\n    const doorCell = this.gridManager.getCell(7, 5);\n    doorCell.setType('door');\n    doorCell.setProperty('locked', true);\n    doorCell.setProperty('key_id', 'test_key');\n  }\n\n  handleKeyDown(event) {\n    let newX = this.playerPos.x;\n    let newY = this.playerPos.y;\n\n    switch (event.code) {\n      case 'ArrowUp':\n        newY--;\n        break;\n      case 'ArrowDown':\n        newY++;\n        break;\n      case 'ArrowLeft':\n        newX--;\n        break;\n      case 'ArrowRight':\n        newX++;\n        break;\n    }\n\n    // Check if the new position is walkable\n    if (this.gridManager.canMoveTo(newX, newY)) {\n      this.playerPos.x = newX;\n      this.playerPos.y = newY;\n    }\n\n    // Calculate visibility from new position\n    this.gridManager.resetVisibility();\n    const visibleCells = this.gridManager.getCellsInRange(this.playerPos.x, this.playerPos.y, 5);\n    for (const cell of visibleCells) {\n      if (this.gridManager.hasLineOfSight(this.playerPos.x, this.playerPos.y, cell.x, cell.y)) {\n        cell.visible = true;\n        cell.explored = true;\n      }\n    }\n  }\n\n  renderGrid() {\n    const { width, height, tileSize } = this.gridManager;\n\n    // Draw each cell\n    for (let y = 0; y < height; y++) {\n      for (let x = 0; x < width; x++) {\n        const cell = this.gridManager.getCell(x, y);\n        const { x: screenX, y: screenY } = this.gridManager.gridToScreen(x, y);\n\n        if (!cell.explored) {\n          continue; // Don't render unexplored cells\n        }\n\n        // Determine cell color based on type and visibility\n        let fillColor = '#333'; // Default floor color\n        if (!cell.visible) {\n          fillColor = '#1a1a1a'; // Darker for explored but not visible\n        }\n\n        switch (cell.type) {\n          case 'wall':\n            fillColor = cell.visible ? '#666' : '#333';\n            break;\n          case 'door':\n            fillColor = cell.visible ? '#8b4513' : '#3b2613'; // Brown for doors\n            break;\n        }\n\n        // Draw cell\n        this.ctx.fillStyle = fillColor;\n        this.ctx.fillRect(screenX, screenY, tileSize, tileSize);\n\n        // Draw grid lines\n        this.ctx.strokeStyle = '#444';\n        this.ctx.strokeRect(screenX, screenY, tileSize, tileSize);\n      }\n    }\n  }\n\n  renderPlayer() {\n    const { x: screenX, y: screenY } = this.gridManager.gridToScreen(this.playerPos.x, this.playerPos.y);\n    const tileSize = this.gridManager.tileSize;\n\n    // Draw player (yellow square)\n    this.ctx.fillStyle = '#ff0';\n    this.ctx.fillRect(\n      screenX + 4,\n      screenY + 4,\n      tileSize - 8,\n      tileSize - 8\n    );\n  }\n\n  gameLoop(timestamp) {\n    try {\n      // Calculate delta time\n      const deltaTime = timestamp - this.lastFrameTime;\n      this.lastFrameTime = timestamp;\n\n      // Clear canvas\n      this.ctx.fillStyle = '#000';\n      this.ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\n\n      // Render game elements\n      this.renderGrid();\n      this.renderPlayer();\n\n      // Draw FPS counter\n      this.ctx.fillStyle = '#fff';\n      this.ctx.font = '14px monospace';\n      this.ctx.fillText(`FPS: ${Math.round(1000 / deltaTime)}`, 10, 20);\n\n      this.frameCount++;\n      requestAnimationFrame(this.gameLoop.bind(this));\n    } catch (error) {\n      console.error('Game loop error:', error);\n      throw error;\n    }\n  }\n}\n\nconsole.log('Game script loaded, waiting for window load');\nwindow.addEventListener('load', () => {\n  console.log('Window loaded, initializing game');\n  try {\n    window.game = new GameManager();\n  } catch (error) {\n    console.error('Failed to initialize game:', error);\n  }\n});\n\nexport default GameManager;\n"],"names":["GridCell","x","y","_classCallCheck","type","walkable","transparent","visible","explored","entities","Set","properties","Map","_createClass","key","value","addEntity","entity","add","removeEntity","hasBlockingEntity","Array","from","some","blocking","setProperty","set","getProperty","get","hasProperty","has","setType","console","warn","concat","GridManager","width","height","tileSize","arguments","length","undefined","grid","createGrid","isInBounds","getCell","canMoveTo","cell","gridToScreen","gridX","gridY","screenToGrid","screenX","screenY","Math","floor","getNeighbors","includeDiagonals","neighbors","directions","push","_i","_directions","dir","newX","newY","getWalkableNeighbors","_this","filter","hasLineOfSight","x1","y1","x2","y2","dx","abs","dy","sx","sy","err","e2","getCellsInRange","centerX","centerY","range","cells","distance","sqrt","pow","resetVisibility","clear","GameManager","log","canvas","document","getElementById","Error","ctx","getContext","GRID_WIDTH","GRID_HEIGHT","TILE_SIZE","imageSmoothingEnabled","gridManager","lastFrameTime","frameCount","createTestDungeon","playerPos","handleKeyDown","bind","window","addEventListener","gameLoop","loadingScreen","classList","error","doorCell","event","code","visibleCells","_iterator","_createForOfIteratorHelper","_step","s","n","done","e","f","renderGrid","_this$gridManager","_this$gridManager$gri","fillColor","fillStyle","fillRect","strokeStyle","strokeRect","renderPlayer","_this$gridManager$gri2","timestamp","deltaTime","font","fillText","round","requestAnimationFrame","game"],"sourceRoot":""}