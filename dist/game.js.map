{"version":3,"file":"game.js","mappings":"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","sources":["webpack://devcrawler/./src/game/Camera.js","webpack://devcrawler/./src/game/dungeon/Corridor.js","webpack://devcrawler/./src/game/dungeon/DungeonGenerator.js","webpack://devcrawler/./src/game/dungeon/Room.js","webpack://devcrawler/./src/game/dungeon/RoomColors.js","webpack://devcrawler/./src/game/grid/GridCell.js","webpack://devcrawler/./src/game/grid/GridManager.js","webpack://devcrawler/webpack/bootstrap","webpack://devcrawler/webpack/runtime/define property getters","webpack://devcrawler/webpack/runtime/hasOwnProperty shorthand","webpack://devcrawler/webpack/runtime/make namespace object","webpack://devcrawler/./src/game/index.js"],"sourcesContent":["export class Camera {\n  constructor(width, height, worldWidth, worldHeight, tileSize) {\n    this.width = width;\n    this.height = height;\n    this.worldWidth = worldWidth;\n    this.worldHeight = worldHeight;\n    this.tileSize = tileSize;\n    this.x = 0;\n    this.y = 0;\n\n    // Calculate the number of tiles that can be displayed\n    this.tilesX = Math.floor(width / tileSize);\n    this.tilesY = Math.floor(height / tileSize);\n\n    // Scroll threshold in tiles (5 tiles from edge)\n    this.scrollThreshold = 5;\n  }\n\n  // Update camera position based on target (player) position\n  follow(targetX, targetY) {\n    // Convert target position to screen space\n    const screenX = (targetX * this.tileSize) - this.x;\n    const screenY = (targetY * this.tileSize) - this.y;\n\n    // Check if target is too close to screen edges\n    if (screenX < this.scrollThreshold * this.tileSize) {\n      this.x = (targetX * this.tileSize) - (this.scrollThreshold * this.tileSize);\n    }\n    if (screenX > this.width - (this.scrollThreshold * this.tileSize)) {\n      this.x = (targetX * this.tileSize) - this.width + (this.scrollThreshold * this.tileSize);\n    }\n    if (screenY < this.scrollThreshold * this.tileSize) {\n      this.y = (targetY * this.tileSize) - (this.scrollThreshold * this.tileSize);\n    }\n    if (screenY > this.height - (this.scrollThreshold * this.tileSize)) {\n      this.y = (targetY * this.tileSize) - this.height + (this.scrollThreshold * this.tileSize);\n    }\n\n    // Clamp camera position to world bounds\n    this.x = Math.max(0, Math.min(this.x, (this.worldWidth * this.tileSize) - this.width));\n    this.y = Math.max(0, Math.min(this.y, (this.worldHeight * this.tileSize) - this.height));\n  }\n\n  // Convert world coordinates to screen coordinates\n  worldToScreen(worldX, worldY) {\n    return {\n      x: (worldX * this.tileSize) - this.x,\n      y: (worldY * this.tileSize) - this.y\n    };\n  }\n\n  // Check if a tile is visible on screen\n  isVisible(worldX, worldY) {\n    const screenPos = this.worldToScreen(worldX, worldY);\n    return screenPos.x >= -this.tileSize &&\n      screenPos.x <= this.width &&\n      screenPos.y >= -this.tileSize &&\n      screenPos.y <= this.height;\n  }\n}\n","// src/game/dungeon/Corridor.js\n\nexport class Corridor {\n  constructor(startX, startY, endX, endY) {\n    this.startX = startX;\n    this.startY = startY;\n    this.endX = endX;\n    this.endY = endY;\n    this.type = 'corridor';\n    this.path = [];\n    this.generatePath();\n  }\n\n  generatePath() {\n    this.path = [];\n    let currentX = this.startX;\n    let currentY = this.startY;\n\n    // Add starting point\n    this.path.push({ x: currentX, y: currentY });\n\n    const horizontalFirst = Math.random() < 0.5;\n\n    if (horizontalFirst) {\n      // Go horizontal first\n      while (currentX !== this.endX) {\n        currentX += currentX < this.endX ? 1 : -1;\n        this.path.push({ x: currentX, y: currentY });\n      }\n      // Then vertical\n      while (currentY !== this.endY) {\n        currentY += currentY < this.endY ? 1 : -1;\n        this.path.push({ x: currentX, y: currentY });\n      }\n    } else {\n      // Go vertical first\n      while (currentY !== this.endY) {\n        currentY += currentY < this.endY ? 1 : -1;\n        this.path.push({ x: currentX, y: currentY });\n      }\n      // Then horizontal\n      while (currentX !== this.endX) {\n        currentX += currentX < this.endX ? 1 : -1;\n        this.path.push({ x: currentX, y: currentY });\n      }\n    }\n  }\n\n  // Get the first few points of the path\n  getStartPoints(count = 3) {\n    return this.path.slice(0, count);\n  }\n\n  // Get the last few points of the path\n  getEndPoints(count = 3) {\n    return this.path.slice(-count);\n  }\n}\n","// src/game/dungeon/DungeonGenerator.js\n\nimport { Room } from './Room.js';\nimport { Corridor } from './Corridor.js';\n\nexport class DungeonGenerator {\n  constructor(width, height) {\n    this.width = width;\n    this.height = height;\n    this.rooms = [];\n    this.corridors = [];\n    this.grid = Array(height).fill().map(() => Array(width).fill(0));\n  }\n\n  generate() {\n    this.rooms = [];\n    this.corridors = [];\n    this.grid = Array(this.height).fill().map(() => Array(this.width).fill(0));\n\n    this.generateRooms();\n    this.connectRooms();\n    this.applyToGrid();\n\n    return {\n      grid: this.grid,\n      rooms: this.rooms,\n      corridors: this.corridors\n    };\n  }\n\n  generateRooms(attempts = 50) {\n    for (let i = 0; i < attempts; i++) {\n      const minSize = 5;\n      const maxSize = 10;\n\n      const width = minSize + Math.floor(Math.random() * (maxSize - minSize));\n      const height = minSize + Math.floor(Math.random() * (maxSize - minSize));\n\n      const x = Math.floor(Math.random() * (this.width - width - 2)) + 1;\n      const y = Math.floor(Math.random() * (this.height - height - 2)) + 1;\n\n      const newRoom = new Room(x, y, width, height);\n\n      let overlaps = false;\n      for (const room of this.rooms) {\n        if (newRoom.intersects(room, 2)) {\n          overlaps = true;\n          break;\n        }\n      }\n\n      if (!overlaps) {\n        this.rooms.push(newRoom);\n      }\n    }\n  }\n\n  connectRooms() {\n    const sortedRooms = [...this.rooms].sort((a, b) => a.x - b.x);\n\n    for (let i = 0; i < sortedRooms.length - 1; i++) {\n      const roomA = sortedRooms[i];\n      const roomB = sortedRooms[i + 1];\n\n      const centerA = roomA.getCenter();\n      const centerB = roomB.getCenter();\n\n      const corridor = new Corridor(centerA.x, centerA.y, centerB.x, centerB.y);\n      this.corridors.push(corridor);\n    }\n  }\n\n  applyToGrid() {\n    // First pass: Apply rooms\n    for (const room of this.rooms) {\n      for (let y = room.y; y < room.y + room.height; y++) {\n        for (let x = room.x; x < room.x + room.width; x++) {\n          if (this.isInBounds(x, y)) {\n            this.grid[y][x] = 1; // floor\n          }\n        }\n      }\n    }\n\n    // Second pass: Apply corridors\n    for (const corridor of this.corridors) {\n      for (const point of corridor.path) {\n        if (this.isInBounds(point.x, point.y)) {\n          this.grid[point.y][point.x] = 1; // floor\n        }\n      }\n    }\n\n    // Third pass: Add walls\n    const tempGrid = this.grid.map(row => [...row]);\n    for (let y = 0; y < this.height; y++) {\n      for (let x = 0; x < this.width; x++) {\n        if (tempGrid[y][x] === 0) { // Empty space\n          if (this.hasAdjacentFloor(x, y)) {\n            this.grid[y][x] = 3; // wall\n          }\n        }\n      }\n    }\n\n    // Fourth pass: Place doors\n    console.log('Attempting to place doors...');\n    this.placeDoors();\n  }\n\n  placeDoors() {\n    for (const corridor of this.corridors) {\n      let startSection = corridor.path.slice(1, 4);\n      let endSection = corridor.path.slice(-4, -1);\n\n      for (const point of [...startSection, ...endSection]) {\n        if (this.shouldPlaceDoor(point.x, point.y)) {\n          this.grid[point.y][point.x] = 2; // door tile value\n        }\n      }\n    }\n  }\n\n  shouldPlaceDoor(x, y) {\n    if (!this.isInBounds(x, y)) return false;\n\n    // The point itself must be a floor tile\n    if (this.grid[y][x] !== 1) return false;\n\n    // Check horizontal door possibility (walls on north and south)\n    const horizontalDoor =\n      this.isInBounds(x, y - 1) && this.grid[y - 1][x] === 3 && // Wall above\n      this.isInBounds(x, y + 1) && this.grid[y + 1][x] === 3 && // Wall below\n      this.isInBounds(x - 1, y) && this.grid[y][x - 1] === 1 && // Floor left\n      this.isInBounds(x + 1, y) && this.grid[y][x + 1] === 1;   // Floor right\n\n    // Check vertical door possibility (walls on east and west)\n    const verticalDoor =\n      this.isInBounds(x - 1, y) && this.grid[y][x - 1] === 3 && // Wall left\n      this.isInBounds(x + 1, y) && this.grid[y][x + 1] === 3 && // Wall right\n      this.isInBounds(x, y - 1) && this.grid[y - 1][x] === 1 && // Floor above\n      this.isInBounds(x, y + 1) && this.grid[y + 1][x] === 1;   // Floor below\n\n    return horizontalDoor || verticalDoor;\n  }\n\n  hasAdjacentFloor(x, y) {\n    for (let dy = -1; dy <= 1; dy++) {\n      for (let dx = -1; dx <= 1; dx++) {\n        if (dx === 0 && dy === 0) continue;\n        const ny = y + dy;\n        const nx = x + dx;\n        if (this.isInBounds(nx, ny) && this.grid[ny][nx] === 1) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  isInBounds(x, y) {\n    return x >= 0 && x < this.width && y >= 0 && y < this.height;\n  }\n}\n","// src/game/dungeon/Room.js\n\nexport const RoomType = {\n  STANDARD: 'standard',\n  ENTRANCE: 'entrance',\n  LARGE_HALL: 'largeHall',\n  BOSS: 'boss',\n  STORAGE: 'storage',\n  TREASURE: 'treasure'\n};\n\nexport class Room {\n  constructor(x, y, width, height) {\n    this.x = x;\n    this.y = y;\n    this.width = width;\n    this.height = height;\n    this.doors = [];\n    this.type = RoomType.STANDARD;\n    this.features = new Map();\n\n    // Additional properties for special rooms\n    this.isLocked = false;\n    this.requiredKey = null;\n    this.contents = new Set(); // For items, monsters, etc.\n  }\n\n  intersects(other, padding = 0) {\n    return !(this.x + this.width + padding < other.x ||\n      other.x + other.width + padding < this.x ||\n      this.y + this.height + padding < other.y ||\n      other.y + other.height + padding < this.y);\n  }\n\n  getCenter() {\n    return {\n      x: Math.floor(this.x + this.width / 2),\n      y: Math.floor(this.y + this.height / 2)\n    };\n  }\n\n  getBounds() {\n    return {\n      left: this.x,\n      right: this.x + this.width,\n      top: this.y,\n      bottom: this.y + this.height\n    };\n  }\n\n  addDoor(x, y, type = 'normal') {\n    this.doors.push({ x, y, type });\n  }\n\n  // Get minimum size requirements for each room type\n  static getMinSize(type) {\n    switch (type) {\n      case RoomType.LARGE_HALL:\n        return { width: 12, height: 12 };\n      case RoomType.BOSS:\n        return { width: 15, height: 15 };\n      case RoomType.STORAGE:\n        return { width: 5, height: 5 };\n      case RoomType.TREASURE:\n        return { width: 7, height: 7 };\n      case RoomType.ENTRANCE:\n        return { width: 8, height: 8 };\n      default:\n        return { width: 6, height: 6 };\n    }\n  }\n\n  setType(type) {\n    this.type = type;\n    // Apply type-specific properties\n    switch (type) {\n      case RoomType.TREASURE:\n        this.isLocked = true;\n        this.requiredKey = 'treasure_key';\n        break;\n      case RoomType.BOSS:\n        this.isLocked = true;\n        break;\n      case RoomType.ENTRANCE:\n        // Entrance should always be accessible\n        this.isLocked = false;\n        break;\n    }\n    return this;\n  }\n\n  // Generate a room of specific type\n  static generate(type, availableWidth, availableHeight, padding = 2) {\n    const minSize = Room.getMinSize(type);\n    let width, height;\n\n    switch (type) {\n      case RoomType.LARGE_HALL:\n        width = minSize.width + Math.floor(Math.random() * 4);\n        height = minSize.height + Math.floor(Math.random() * 4);\n        break;\n      case RoomType.BOSS:\n        width = minSize.width + Math.floor(Math.random() * 5);\n        height = minSize.height + Math.floor(Math.random() * 5);\n        break;\n      case RoomType.STORAGE:\n        width = minSize.width + Math.floor(Math.random() * 2);\n        height = minSize.height + Math.floor(Math.random() * 2);\n        break;\n      case RoomType.TREASURE:\n        width = minSize.width + Math.floor(Math.random() * 3);\n        height = minSize.height + Math.floor(Math.random() * 3);\n        break;\n      case RoomType.ENTRANCE:\n        width = minSize.width;\n        height = minSize.height;\n        break;\n      default: // STANDARD\n        width = minSize.width + Math.floor(Math.random() * 4);\n        height = minSize.height + Math.floor(Math.random() * 4);\n    }\n\n    // Ensure room fits in available space\n    width = Math.min(width, availableWidth - padding * 2);\n    height = Math.min(height, availableHeight - padding * 2);\n\n    // Position room\n    const x = padding + Math.floor(Math.random() * (availableWidth - width - padding * 2));\n    const y = padding + Math.floor(Math.random() * (availableHeight - height - padding * 2));\n\n    const room = new Room(x, y, width, height);\n    room.setType(type);\n    return room;\n  }\n}\n","// src/game/dungeon/RoomColors.js\n\nimport { RoomType } from './Room.js';\nexport const RoomColors = {\n  [RoomType.STANDARD]: '#444',    // Standard gray\n  [RoomType.ENTRANCE]: '#4a9',    // Teal\n  [RoomType.LARGE_HALL]: '#66a',  // Purple-blue\n  [RoomType.BOSS]: '#a44',        // Dark red\n  [RoomType.STORAGE]: '#974',     // Tan\n  [RoomType.TREASURE]: '#aa4',    // Gold\n  'corridor': '#335',             // Dark blue-gray\n  'wall': '#666',                 // Light gray\n  'door': {\n    'open': '#4a2',             // Green\n    'closed': '#8b4513'         // Brown\n  }\n};\n","// src/game/grid/GridCell.js\n\nexport class GridCell {\n  constructor(x, y) {\n    this.x = x;\n    this.y = y;\n    this.type = 'floor';\n    this.walkable = true;\n    this.transparent = true;\n    this.visible = false;\n    this.explored = false;\n    this.entities = new Set();\n    this.properties = new Map();\n    this.isDoor = false;\n    this.isOpen = false;\n  }\n\n  // Entity management\n  addEntity(entity) {\n    this.entities.add(entity);\n    return this;\n  }\n\n  removeEntity(entity) {\n    this.entities.delete(entity);\n    return this;\n  }\n\n  hasBlockingEntity() {\n    return Array.from(this.entities).some(entity => entity.blocking);\n  }\n\n  // Property management\n  setProperty(key, value) {\n    this.properties.set(key, value);\n    return this;\n  }\n\n  getProperty(key) {\n    return this.properties.get(key);\n  }\n\n  hasProperty(key) {\n    return this.properties.has(key);\n  }\n\n  // Cell type management\n  setType(type) {\n    this.type = type;\n\n    switch (type) {\n      case 'wall':\n        this.walkable = false;\n        this.transparent = false;\n        this.isDoor = false;\n        break;\n      case 'door':\n        this.isDoor = true;\n        this.isOpen = Math.random() < 0.2; // 20% chance to start open\n        this.walkable = this.isOpen;\n        this.transparent = this.isOpen;\n        break;\n      case 'floor':\n        this.walkable = true;\n        this.transparent = true;\n        this.isDoor = false;\n        break;\n      default:\n        console.warn(`Unknown cell type: ${type}`);\n    }\n  }\n\n  toggleDoor() {\n    if (!this.isDoor) return false;\n\n    this.isOpen = !this.isOpen;\n    this.walkable = this.isOpen;\n    this.transparent = this.isOpen;\n    return true;\n  }\n}\n","// src/game/grid/GridManager.js\n\nimport { GridCell } from './GridCell.js';\n\nexport class GridManager {\n  constructor(width, height, tileSize = 32) {\n    this.width = width;\n    this.height = height;\n    this.tileSize = tileSize;\n    this.grid = this.createGrid();\n  }\n\n  createGrid() {\n    const grid = new Array(this.height);\n    for (let y = 0; y < this.height; y++) {\n      grid[y] = new Array(this.width);\n      for (let x = 0; x < this.width; x++) {\n        grid[y][x] = new GridCell(x, y);\n      }\n    }\n    return grid;\n  }\n\n  isInBounds(x, y) {\n    return x >= 0 && x < this.width && y >= 0 && y < this.height;\n  }\n\n  getCell(x, y) {\n    if (!this.isInBounds(x, y)) return null;\n    return this.grid[y][x];\n  }\n\n  // Movement validation\n  canMoveTo(x, y) {\n    const cell = this.getCell(x, y);\n    if (!cell) return false;\n\n    // Check if it's a door and it's closed\n    if (cell.isDoor && !cell.isOpen) {\n      return false;\n    }\n\n    return cell.walkable && !cell.hasBlockingEntity();\n  }\n\n  // Coordinate conversion\n  gridToScreen(gridX, gridY) {\n    return {\n      x: gridX * this.tileSize,\n      y: gridY * this.tileSize\n    };\n  }\n\n  screenToGrid(screenX, screenY) {\n    return {\n      x: Math.floor(screenX / this.tileSize),\n      y: Math.floor(screenY / this.tileSize)\n    };\n  }\n\n  // Get all neighbors of a cell\n  getNeighbors(x, y, includeDiagonals = false) {\n    const neighbors = [];\n    const directions = [\n      { x: 0, y: -1 },  // Up\n      { x: 1, y: 0 },   // Right\n      { x: 0, y: 1 },   // Down\n      { x: -1, y: 0 }   // Left\n    ];\n\n    if (includeDiagonals) {\n      directions.push(\n        { x: 1, y: -1 },  // Up-Right\n        { x: 1, y: 1 },   // Down-Right\n        { x: -1, y: 1 },  // Down-Left\n        { x: -1, y: -1 }  // Up-Left\n      );\n    }\n\n    for (const dir of directions) {\n      const newX = x + dir.x;\n      const newY = y + dir.y;\n      const cell = this.getCell(newX, newY);\n      if (cell) neighbors.push(cell);\n    }\n\n    return neighbors;\n  }\n\n  // Get walkable neighbors (for pathfinding)\n  getWalkableNeighbors(x, y, includeDiagonals = false) {\n    return this.getNeighbors(x, y, includeDiagonals)\n      .filter(cell => this.canMoveTo(cell.x, cell.y));\n  }\n\n  // Line of sight check\n  hasLineOfSight(x1, y1, x2, y2) {\n    // Bresenham's line algorithm\n    const dx = Math.abs(x2 - x1);\n    const dy = Math.abs(y2 - y1);\n    const sx = x1 < x2 ? 1 : -1;\n    const sy = y1 < y2 ? 1 : -1;\n    let err = dx - dy;\n\n    let x = x1;\n    let y = y1;\n\n    while (true) {\n      if (x === x2 && y === y2) return true;\n\n      const cell = this.getCell(x, y);\n      if (!cell || !cell.transparent) return false;\n\n      const e2 = 2 * err;\n      if (e2 > -dy) {\n        err -= dy;\n        x += sx;\n      }\n      if (e2 < dx) {\n        err += dx;\n        y += sy;\n      }\n    }\n  }\n\n  // Get all cells within a certain range\n  getCellsInRange(centerX, centerY, range) {\n    const cells = [];\n    for (let y = centerY - range; y <= centerY + range; y++) {\n      for (let x = centerX - range; x <= centerX + range; x++) {\n        const cell = this.getCell(x, y);\n        if (cell) {\n          const distance = Math.sqrt(\n            Math.pow(x - centerX, 2) +\n            Math.pow(y - centerY, 2)\n          );\n          if (distance <= range) {\n            cells.push(cell);\n          }\n        }\n      }\n    }\n    return cells;\n  }\n\n  resetVisibility() {\n    for (let y = 0; y < this.height; y++) {\n      for (let x = 0; x < this.width; x++) {\n        this.grid[y][x].visible = false;\n      }\n    }\n  }\n\n  clear() {\n    this.grid = this.createGrid();\n  }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// src/game/index.js\n\nimport { GridManager } from './grid/GridManager.js';\nimport { DungeonGenerator } from './dungeon/DungeonGenerator.js';\nimport { Camera } from './Camera.js';\nimport { RoomType } from './dungeon/Room.js';\nimport { RoomColors } from './dungeon/RoomColors.js';\n\nclass GameManager {\n  constructor() {\n    console.log('GameManager initializing...');\n\n    try {\n      // Initialize canvas\n      this.canvas = document.getElementById('gameCanvas');\n      if (!this.canvas) {\n        throw new Error('Canvas element not found');\n      }\n\n      this.ctx = this.canvas.getContext('2d');\n      if (!this.ctx) {\n        throw new Error('Could not get 2D context');\n      }\n\n      // Constants\n      const GRID_WIDTH = 50;  // World size\n      const GRID_HEIGHT = 50;\n      const TILE_SIZE = 16;\n\n      // Set fixed canvas size (won't scale with window)\n      this.canvas.width = 800;   // Show 50 tiles at 16px each\n      this.canvas.height = 600;  // Show 37.5 tiles vertically\n\n      // Initialize camera\n      this.camera = new Camera(\n        this.canvas.width,\n        this.canvas.height,\n        GRID_WIDTH,\n        GRID_HEIGHT,\n        TILE_SIZE\n      );\n\n      // Initial canvas setup\n      this.ctx.imageSmoothingEnabled = false;\n\n      // Create grid system\n      this.gridManager = new GridManager(GRID_WIDTH, GRID_HEIGHT, TILE_SIZE);\n\n      // Create dungeon generator\n      this.dungeonGenerator = new DungeonGenerator(GRID_WIDTH, GRID_HEIGHT);\n\n      // Initialize room type tracking\n      this.roomTypes = new Map(); // Stores coordinates -> room type\n\n      // Set up game state\n      this.lastFrameTime = 0;\n      this.frameCount = 0;\n\n      // Player position - will be set after dungeon generation\n      this.playerPos = { x: 0, y: 0 };\n\n      // Generate initial dungeon and place player\n      this.generateNewDungeon();\n\n      // Bind event handlers\n      this.handleKeyDown = this.handleKeyDown.bind(this);\n\n      // Add key event listeners\n      window.addEventListener('keydown', (event) => {\n        if (event.code === 'Space') {\n          this.generateNewDungeon();\n          event.preventDefault();\n        } else {\n          this.handleKeyDown(event);\n        }\n      });\n\n      // Add legend\n      this.addLegend();\n\n      // Start game loop\n      console.log('Starting game loop...');\n      this.gameLoop(0);\n\n      // Hide loading screen\n      const loadingScreen = document.getElementById('loadingScreen');\n      if (loadingScreen) {\n        loadingScreen.classList.add('hidden');\n      }\n\n      // Add instructions\n      this.addInstructions();\n\n    } catch (error) {\n      console.error('Game initialization error:', error);\n      throw error;\n    }\n  }\n\n  addLegend() {\n    const legend = document.createElement('div');\n    legend.style.position = 'absolute';\n    legend.style.top = '10px';\n    legend.style.right = '10px';\n    legend.style.color = 'white';\n    legend.style.fontFamily = 'monospace';\n    legend.style.fontSize = '14px';\n    legend.style.backgroundColor = 'rgba(0, 0, 0, 0.7)';\n    legend.style.padding = '10px';\n    legend.style.borderRadius = '5px';\n\n    let legendHTML = '<div style=\"text-align: left; font-weight: bold;\">Room Types:</div>';\n\n    // Add each room type to the legend\n    Object.entries(RoomType).forEach(([key, value]) => {\n      const color = RoomColors[value];\n      legendHTML += `\n          <div style=\"display: flex; align-items: center; margin: 5px 0;\">\n              <div style=\"width: 20px; height: 20px; background-color: ${color}; margin-right: 10px; border: 1px solid #666;\"></div>\n              <span>${key.charAt(0) + key.slice(1).toLowerCase().replace('_', ' ')}</span>\n          </div>`;\n    });\n\n    // Add corridor\n    legendHTML += `\n      <div style=\"display: flex; align-items: center; margin: 5px 0;\">\n          <div style=\"width: 20px; height: 20px; background-color: ${RoomColors.corridor}; margin-right: 10px; border: 1px solid #666;\"></div>\n          <span>Corridor</span>\n      </div>`;\n\n    // Add doors\n    legendHTML += `\n      <div style=\"display: flex; align-items: center; margin: 5px 0;\">\n          <div style=\"width: 20px; height: 20px; background-color: ${RoomColors.door.closed}; margin-right: 10px; border: 1px solid #666;\"></div>\n          <span>Door (Closed)</span>\n      </div>\n      <div style=\"display: flex; align-items: center; margin: 5px 0;\">\n          <div style=\"width: 20px; height: 20px; background-color: ${RoomColors.door.open}; margin-right: 10px; border: 1px solid #666;\"></div>\n          <span>Door (Open)</span>\n      </div>`;\n\n    legend.innerHTML = legendHTML;\n    document.getElementById('gameContainer').appendChild(legend);\n  }\n\n  generateNewDungeon() {\n    /// Clear existing room type tracking\n    this.roomTypes.clear();\n\n    // Generate new dungeon layout\n    const dungeon = this.dungeonGenerator.generate();\n\n    // Store room types for each cell\n    for (const room of dungeon.rooms) {\n      for (let y = room.y; y < room.y + room.height; y++) {\n        for (let x = room.x; x < room.x + room.width; x++) {\n          this.roomTypes.set(`${x},${y}`, room.type);\n        }\n      }\n    }\n\n    // Store corridor locations\n    for (const corridor of dungeon.corridors) {\n      for (const point of corridor.path) {\n        this.roomTypes.set(`${point.x},${point.y}`, 'corridor');\n      }\n    }\n\n    // Clear existing grid\n    this.gridManager.clear();\n\n    // Apply dungeon to grid\n    for (let y = 0; y < dungeon.grid.length; y++) {\n      for (let x = 0; x < dungeon.grid[y].length; x++) {\n        const cell = this.gridManager.getCell(x, y);\n        switch (dungeon.grid[y][x]) {\n          case 0: // Empty\n            cell.setType('wall');\n            cell.walkable = false;\n            cell.transparent = false;\n            break;\n          case 1: // Floor\n            cell.setType('floor');\n            cell.walkable = true;\n            cell.transparent = true;\n            break;\n          case 2: // Door\n            cell.setType('door');\n            cell.walkable = true;\n            cell.transparent = false;\n            break;\n          case 3: // Wall\n            cell.setType('wall');\n            cell.walkable = false;\n            cell.transparent = false;\n            break;\n        }\n      }\n    }\n\n    // Place player in a valid position\n    this.placePlayerInDungeon();\n\n    // Reset camera to follow player\n    this.camera.follow(this.playerPos.x, this.playerPos.y);\n\n    // Update initial visibility\n    this.updateVisibility();\n  }\n\n  placePlayerInDungeon() {\n    // Find first walkable cell\n    for (let y = 0; y < this.gridManager.height; y++) {\n      for (let x = 0; x < this.gridManager.width; x++) {\n        if (this.gridManager.canMoveTo(x, y)) {\n          this.playerPos = { x, y };\n          return;\n        }\n      }\n    }\n  }\n\n  updateVisibility() {\n    this.gridManager.resetVisibility();\n    const visibleCells = this.gridManager.getCellsInRange(this.playerPos.x, this.playerPos.y, 5);\n    for (const cell of visibleCells) {\n      if (this.gridManager.hasLineOfSight(this.playerPos.x, this.playerPos.y, cell.x, cell.y)) {\n        cell.visible = true;\n        cell.explored = true;\n      }\n    }\n  }\n\n  addInstructions() {\n    const instructions = document.createElement('div');\n    instructions.style.position = 'absolute';\n    instructions.style.top = '10px';\n    instructions.style.left = '10px';\n    instructions.style.color = 'white';\n    instructions.style.fontFamily = 'monospace';\n    instructions.style.fontSize = '14px';\n    instructions.style.backgroundColor = 'rgba(0, 0, 0, 0.7)';\n    instructions.style.padding = '10px';\n    instructions.style.borderRadius = '5px';\n    instructions.innerHTML = 'Arrow Keys: Move<br>E: Open/Close Door<br>Space: Generate New Dungeon';\n    document.getElementById('gameContainer').appendChild(instructions);\n  }\n\n  handleKeyDown(event) {\n    if (event.code === 'KeyE') {\n      this.tryToggleNearbyDoor();\n      event.preventDefault();\n      return;\n    }\n\n    let newX = this.playerPos.x;\n    let newY = this.playerPos.y;\n\n    switch (event.code) {\n      case 'ArrowUp': newY--; break;\n      case 'ArrowDown': newY++; break;\n      case 'ArrowLeft': newX--; break;\n      case 'ArrowRight': newX++; break;\n      default: return;\n    }\n\n    if (this.gridManager.canMoveTo(newX, newY)) {\n      this.playerPos.x = newX;\n      this.playerPos.y = newY;\n      this.camera.follow(this.playerPos.x, this.playerPos.y);\n      this.updateVisibility();\n    }\n\n    event.preventDefault();\n  }\n\n  tryToggleNearbyDoor() {\n    const neighbors = this.gridManager.getNeighbors(\n      this.playerPos.x,\n      this.playerPos.y,\n      true // include diagonals\n    );\n\n    for (const cell of neighbors) {\n      if (cell.isDoor) {\n        if (cell.toggleDoor()) {\n          this.updateVisibility();\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n\n  renderGrid() {\n    const { width, height, tileSize } = this.gridManager;\n\n    for (let y = 0; y < height; y++) {\n      for (let x = 0; x < width; x++) {\n        if (!this.camera.isVisible(x, y)) continue;\n\n        const cell = this.gridManager.getCell(x, y);\n        if (!cell.explored) continue;\n\n        const screenPos = this.camera.worldToScreen(x, y);\n        let fillColor = '#333';\n\n        if (!cell.visible) {\n          fillColor = '#1a1a1a';\n        } else {\n          switch (cell.type) {\n            case 'wall':\n              fillColor = RoomColors.wall;\n              break;\n            case 'door':\n              fillColor = cell.isOpen ? RoomColors.door.open : RoomColors.door.closed;\n              break;\n            case 'floor':\n              // Get room type for this cell\n              const roomType = this.roomTypes.get(`${x},${y}`);\n              fillColor = RoomColors[roomType] || RoomColors[RoomType.STANDARD];\n              break;\n          }\n        }\n\n        this.ctx.fillStyle = fillColor;\n        this.ctx.fillRect(screenPos.x, screenPos.y, tileSize, tileSize);\n\n        if (cell.visible) {\n          this.ctx.strokeStyle = '#222';\n          this.ctx.strokeRect(screenPos.x, screenPos.y, tileSize, tileSize);\n        }\n      }\n    }\n  }\n\n  renderPlayer() {\n    const screenPos = this.camera.worldToScreen(this.playerPos.x, this.playerPos.y);\n    const tileSize = this.gridManager.tileSize;\n    this.ctx.fillStyle = '#ff0';\n    this.ctx.fillRect(\n      screenPos.x + 2,\n      screenPos.y + 2,\n      tileSize - 4,\n      tileSize - 4\n    );\n  }\n\n  gameLoop(timestamp) {\n    try {\n      const deltaTime = timestamp - this.lastFrameTime;\n      this.lastFrameTime = timestamp;\n\n      this.ctx.fillStyle = '#000';\n      this.ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\n\n      this.renderGrid();\n      this.renderPlayer();\n\n      this.ctx.fillStyle = '#fff';\n      this.ctx.font = '12px monospace';\n      this.ctx.fillText(`FPS: ${Math.round(1000 / deltaTime)}`, 10, this.canvas.height - 20);\n      this.ctx.fillText(`Pos: (${this.playerPos.x}, ${this.playerPos.y})`, 10, this.canvas.height - 8);\n\n      this.frameCount++;\n      requestAnimationFrame(this.gameLoop.bind(this));\n    } catch (error) {\n      console.error('Game loop error:', error);\n      throw error;\n    }\n  }\n}\n\n// Initialize game when the window loads\nconsole.log('Game script loaded, waiting for window load');\nwindow.addEventListener('load', () => {\n  console.log('Window loaded, initializing game');\n  try {\n    window.game = new GameManager();\n  } catch (error) {\n    console.error('Failed to initialize game:', error);\n  }\n});\n\nexport default GameManager;\n"],"names":["Camera","width","height","worldWidth","worldHeight","tileSize","_classCallCheck","x","y","tilesX","Math","floor","tilesY","scrollThreshold","_createClass","key","value","follow","targetX","targetY","screenX","screenY","max","min","worldToScreen","worldX","worldY","isVisible","screenPos","Corridor","startX","startY","endX","endY","type","path","generatePath","currentX","currentY","push","horizontalFirst","random","getStartPoints","count","arguments","length","undefined","slice","getEndPoints","Room","DungeonGenerator","rooms","corridors","grid","Array","fill","map","generate","_this","generateRooms","connectRooms","applyToGrid","attempts","i","minSize","maxSize","newRoom","overlaps","_iterator","_createForOfIteratorHelper","_step","s","n","done","room","intersects","err","e","f","sortedRooms","_toConsumableArray","sort","a","b","roomA","roomB","centerA","getCenter","centerB","corridor","_iterator2","_step2","isInBounds","_iterator3","_step3","_iterator4","_step4","point","tempGrid","row","hasAdjacentFloor","console","log","placeDoors","_iterator5","_step5","startSection","endSection","_i","_arr","concat","shouldPlaceDoor","horizontalDoor","verticalDoor","dy","dx","ny","nx","RoomType","STANDARD","ENTRANCE","LARGE_HALL","BOSS","STORAGE","TREASURE","doors","features","Map","isLocked","requiredKey","contents","Set","other","padding","getBounds","left","right","top","bottom","addDoor","setType","getMinSize","availableWidth","availableHeight","RoomColors","_defineProperty","GridCell","walkable","transparent","visible","explored","entities","properties","isDoor","isOpen","addEntity","entity","add","removeEntity","hasBlockingEntity","from","some","blocking","setProperty","set","getProperty","get","hasProperty","has","warn","toggleDoor","GridManager","createGrid","getCell","canMoveTo","cell","gridToScreen","gridX","gridY","screenToGrid","getNeighbors","includeDiagonals","neighbors","directions","_directions","dir","newX","newY","getWalkableNeighbors","filter","hasLineOfSight","x1","y1","x2","y2","abs","sx","sy","e2","getCellsInRange","centerX","centerY","range","cells","distance","sqrt","pow","resetVisibility","clear","GameManager","canvas","document","getElementById","Error","ctx","getContext","GRID_WIDTH","GRID_HEIGHT","TILE_SIZE","camera","imageSmoothingEnabled","gridManager","dungeonGenerator","roomTypes","lastFrameTime","frameCount","playerPos","generateNewDungeon","handleKeyDown","bind","window","addEventListener","event","code","preventDefault","addLegend","gameLoop","loadingScreen","classList","addInstructions","error","legend","createElement","style","position","color","fontFamily","fontSize","backgroundColor","borderRadius","legendHTML","Object","entries","forEach","_ref","_ref2","_slicedToArray","charAt","toLowerCase","replace","door","closed","open","innerHTML","appendChild","dungeon","placePlayerInDungeon","updateVisibility","visibleCells","instructions","tryToggleNearbyDoor","renderGrid","_this$gridManager","fillColor","wall","roomType","fillStyle","fillRect","strokeStyle","strokeRect","renderPlayer","timestamp","deltaTime","font","fillText","round","requestAnimationFrame","game"],"sourceRoot":""}